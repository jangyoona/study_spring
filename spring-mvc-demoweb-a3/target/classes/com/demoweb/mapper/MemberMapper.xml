<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
	<!-- namespace : 패키지이름.클래스이름 ( 저장된 경로와 일치하도록 작성 ) Dao에서 쓸 때 이 경로 꼭 정확히 매칭하셈 -->
	<mapper namespace="com.demoweb.mapper.MemberMapper">
	
	<sql id="memberColumns">
		memberId, email, userType, regDate, active
	</sql>
	
	<resultMap id="memberDtoResultMap" type="memberDto">
		<result column="memberId" property="memberId"/>
		<result column="email" property="email"/>
		<result column="userType" property="userType"/>
		<result column="regDate" property="regDate"/>
		<result column="active" property="active"/>
	</resultMap>
	
	
		<!-- 지정된 SQL을 실행하는 method 역할 -->
		<!-- <select id="selectMemberByMemberIdAndPasswd" parameterType="memberDto" resultType="memberDto"> --> 
		<select id="selectMemberByMemberIdAndPasswd" parameterType="memberDto" resultType="memberDto" resultMap="memberDtoResultMap"> 
			SELECT <include refid="memberColumns" />
			FROM member
			WHERE memberId = #{ memberId } AND passwd = #{ passwd }
		</select>
		
		<!-- 파라미터가 Dto 타입이 아닌, 개별 여러개일 때 = hash map 사용 -->
		<select id="selectMemberByMemberIdAndPasswd2" parameterType="hashmap" resultMap="memberDtoResultMap">
			SELECT <include refid="memberColumns" />
			FROM member
			WHERE memberId = #{ memberId } AND passwd = #{ passwd }
		</select>
		
		
		<insert id="insertMember" parameterType="memberDto">
			INSERT INTO member(memberId, passwd, email) VALUES(#{ memberId }, #{ passwd }, #{ email })									   
		</insert>
		
		<update id="updatePasswd" parameterType="memberDto">
			UPDATE member SET passwd = #{ passwd } WHERE memberId = #{ memberId } 
		</update>
		
		<select id="selectMemberCountByMemberId" parameterType="string" resultType="int">
			SELECT COUNT(memberId) FROM member WHERE memberId = #{ memberId }
		</select>
	
	</mapper>